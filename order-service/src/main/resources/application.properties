server.port = 8401

# PostgreSQL DB Connection
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.url=jdbc:mysql://ubuntu.local:4306/01.order-service-db?createDatabaseIfNotExist=true

# Auto init SQL for MySQL DB, using file data.sql
spring.jpa.hibernate.ddl-auto=none
spring.sql.init.mode=always

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type=TRACE

# The main exchange will be used for all RabbitMQ queue ...
rabbitmq.exchange.name=main_exchange

# Log Service Queue
rabbitmq.queue.name=java_logs_queue
rabbitmq.routing.key=java_logs_routing_key

# Payment Request Queue
rabbitmq.payment_request.queue.name=payment_request_queue
rabbitmq.payment_request.routing.key=payment_request_routing_key

# Payment Response Queue
# `order-service` will consume response message from `payment-service`
rabbitmq.payment_response.queue.name=payment_response_queue

# Restaurant Request Queue
rabbitmq.restaurant_request.queue.name=restaurant_request_queue
rabbitmq.restaurant_request.routing.key=restaurant_request_routing_key

# Restaurant Response Queue
# `order-service` will consume response from `restaurant-service`
rabbitmq.restaurant_response.queue.name=restaurant_response_queue

# Delivery Response Queue
# `order-service` will consume response from `delivery-service`
rabbitmq.delivery_response.queue.name=delivery_response_queue


# RabbitMQ for LogService configuration
spring.rabbitmq.host=${RABBITMQ_SERVER:ubuntu.local}
spring.rabbitmq.username=admin
spring.rabbitmq.password=admin
spring.rabbitmq.port=${RABBITMQ_PORT:56820}


# Custom config


